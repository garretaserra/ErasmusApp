{"version":3,"sources":["src/app/views/message/message.page.html","src/app/models/User/user.ts","src/app/views/message/message-routing.module.ts","src/app/views/message/message.module.ts","src/app/views/message/message.page.scss","src/app/views/message/message.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Messages</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      Global Chat\\r\\n    </ion-list-header>\\r\\n    <ion-item (click)=\\\"viewConversation('everyone')\\\">\\r\\n      <ion-label>\\r\\n        <h2>Global Chat</h2>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-list-header>\\r\\n      Online\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngFor=\\\"let userItem of userList\\\" (click)=\\\"viewConversation(userItem[0])\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"../../../assets/img/default_user.png\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h2>{{ userItem[0] }}</h2>\\r\\n          <h3 *ngIf=\\\"filterLast(userItem[0]) !== undefined\\\">\\r\\n            <span *ngIf=\\\"filterLast(userItem[0]).author === user.name\\\">\\r\\n              <b>You: </b>\\r\\n            </span>\\r\\n            {{filterLast(userItem[0]).text}}\\r\\n          </h3>\\r\\n        </ion-label>\\r\\n      <ion-badge *ngIf=\\\"filterAndCount(userItem[0]) != 0\\\" slot=\\\"end\\\">{{filterAndCount(userItem[0])}}</ion-badge>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      Everybody\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngFor=\\\"let userItem of users\\\" (click)=\\\"viewConversation(userItem.name)\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img *ngIf=\\\"userItem.photo\\\" style=\\\"object-fit: cover\\\" src=\\\"{{userItem.photo}}\\\"/>\\r\\n        <img *ngIf=\\\"!userItem.photo\\\" src=\\\"../../../assets/img/default_user.png\\\"/>\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h2>{{ userItem.name }}</h2>\\r\\n        <h3 *ngIf=\\\"filterLast(userItem.name) !== undefined\\\">\\r\\n            <span *ngIf=\\\"filterLast(userItem.name).author === user.name\\\">\\r\\n              <b>You: </b>\\r\\n            </span>\\r\\n          {{filterLast(userItem.name).text}}\\r\\n        </h3>\\r\\n      </ion-label>\\r\\n      <ion-badge *ngIf=\\\"filterAndCount(userItem.name) != 0\\\" slot=\\\"end\\\">{{filterAndCount(userItem.name)}}</ion-badge>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","import {Post} from '../Posts/post';\r\nimport {UserName} from './userName';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport class User {\r\n    jwt: string;\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    password: string;\r\n    profilePhoto: string;\r\n    followers: UserName[]; // Gente que me sigue a m√≠\r\n    following: UserName[]; // Gente a la que yo sigo\r\n\r\n    constructor( jwt = '', _id = '', email = '', pass = '', name = '', profilePhoto = '', followers = null, following = null) {\r\n        this._id = _id;\r\n        this.email = email;\r\n        this.password = pass;\r\n        this.name = name;\r\n        this.profilePhoto = profilePhoto;\r\n        this.followers = followers;\r\n        this.following = following;\r\n        this.jwt=jwt;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MessagePage } from './message.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MessagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MessagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MessagePageRoutingModule } from './message-routing.module';\r\n\r\nimport { MessagePage } from './message.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MessagePageRoutingModule\r\n  ],\r\n  declarations: [MessagePage]\r\n})\r\nexport class MessagePageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL21lc3NhZ2UvbWVzc2FnZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from '../../models/User/user.service';\r\nimport {ChatService} from '../../services/chat.service';\r\nimport {FriendsService} from '../friends/friends.service';\r\nimport {User} from '../../models/User/user';\r\nimport {UserName} from '../../models/User/userName';\r\nimport {NavController} from '@ionic/angular';\r\nimport {StorageComponent} from '../../storage/storage.component';\r\nimport {Message} from '../../models/Message/message';\r\nimport {NotificationComponent} from '../../components/notification/notification.component';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.page.html',\r\n  styleUrls: ['./message.page.scss'],\r\n})\r\nexport class MessagePage implements OnInit {\r\n\r\n  storedMessages: Message[];\r\n  message: string;\r\n  user: User;\r\n  users: UserName[];\r\n  userList: string[];\r\n\r\n  constructor(public navCtrl: NavController,\r\n              private userService: UserService,\r\n              public storage: StorageComponent,\r\n              public chatService: ChatService,\r\n              private friendsService: FriendsService,\r\n              public notificationComponent: NotificationComponent) { }\r\n\r\n  async ngOnInit() {\r\n      this.user = JSON.parse(this.storage.getUser());\r\n      this.chatService.connectSocket(this.user.name);\r\n      this.storedMessages = await this.chatService.getStoredMessages().toPromise();\r\n      this.chatService.getList().subscribe((list: string[]) => {\r\n          this.userList = list.filter(item => item[0] !== this.user.name);\r\n      });\r\n      this.friendsService.getUsers(new User(this.storage.getUser())._id).subscribe((list: UserName[]) => {\r\n          this.users = list.filter(item => item.name !== this.user.name);\r\n          this.users.forEach( user => {\r\n            this.userService.getPhoto(user._id).toPromise().then(result => {\r\n              user.photo = result.photo;\r\n            });\r\n          });\r\n        });\r\n      this.chatService.forceGetList();\r\n      this.chatService.getMessage().subscribe((data: { email, message, everyone }) => {\r\n          if (data.everyone === true) {\r\n              this.storedMessages.push(new Message('', data.email, 'everyone', data.message, new Date(), false, 0));\r\n          } else {\r\n              this.storedMessages.push(new Message('', data.email, this.user.name, data.message, new Date(), false, 0));\r\n          }\r\n      });\r\n  }\r\n\r\n  filterAndCount(name: string) {\r\n      return this.storedMessages.filter((item) => item.author === name && item.read === false && item.destination !== 'everyone').length;\r\n  }\r\n\r\n  filterLast(name: string) {\r\n      // tslint:disable-next-line:max-line-length\r\n      const tmp = this.storedMessages.filter((item) => (item.author === name || item.destination === name) && item.destination !== 'everyone');\r\n      return tmp[tmp.length - 1];\r\n  }\r\n\r\n  viewConversation(name: string) {\r\n    this.navCtrl.navigateForward('/conversation/' + `${name}`);\r\n    this.storedMessages.filter((item) => item.author === name).forEach((msg) => msg.read = true);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"views-message-message-module-es5.js"}